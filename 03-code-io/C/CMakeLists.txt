add_executable(03dax-ioC daxpy_from_config.c)
add_executable(03genC generator.c)

add_custom_target(run-03code-ioC COMMAND ${CMAKE_CURRENT_BINARY_DIR}/03genC 10 vector COMMAND ${CMAKE_CURRENT_BINARY_DIR}/03dax-ioC WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR})
add_dependencies(run-03code-ioC 03genC 03dax-ioC)

# gsl
find_package(GSL)
if(GSL_FOUND)
    include_directories(${GSL_INCLUDE_DIRS} )
    add_executable(03dax-ioC_gls gsl/gsl.axpy.c)
    target_link_libraries(03dax-ioC_gls ${GSL_LIBRARIES})
else()
    message(STATUS "GSL not found, skipping dax-io.glsC")
endif()
# hdf5
find_package(HDF5)
if(HDF5_FOUND)
    include_directories(${HDF5_INCLUDE_DIRS})
    add_executable(03dax-ioC_hdf5 hdf5/daxpy_from_config.c)
    add_executable(03genC_hdf5 hdf5/generator.c)
    target_link_libraries(03dax-ioC_hdf5 ${HDF5_LIBRARIES})
    target_link_libraries(03genC_hdf5 ${HDF5_LIBRARIES})
    add_custom_target(run-03code-ioC_hdf5 COMMAND ${CMAKE_CURRENT_BINARY_DIR}/genC_hdf5 10 vector COMMAND ${CMAKE_CURRENT_BINARY_DIR}/dax-ioC_hdf5 WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/hdf5)
    add_dependencies(run-03code-ioC_hdf5 03genC_hdf5 03dax-ioC_hdf5)
    #add_test(NAME 03code-ioC_hdf5 COMMAND ${CMAKE_CURRENT_BINARY_DIR}/genC_hdf5 10 vector && ${CMAKE_CURRENT_BINARY_DIR}/dax-ioC_hdf5 WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/hdf5)
else()
    message(STATUS "HDF5 not found, skipping dax-io.hdf5C")
endif()